<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd  
                        http://www.springframework.org/schema/context   
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd
                        http://www.springframework.org/schema/security 
                        http://www.springframework.org/schema/security/spring-security.xsd">

	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/pages/" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="2" />
	</bean>
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	    <property name="location" value="/WEB-INF/freemarker.properties"/>
	</bean>
	 
	<!-- 配置freeMarker的模板路径 -->
	<bean id="freemarkerConfig" class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
	    <property name="freemarkerSettings" ref="freemarkerConfiguration"/>
	    <property name="templateLoaderPath">
	        <value>/WEB-INF/ftl/</value>
	    </property>
	    <property name="freemarkerVariables">
	        <map>
	            <entry key="xml_escape" value-ref="fmXmlEscape" />
	        </map>
	    </property>
	</bean>
	 
	<bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
	 
	<!-- 配置freeMarker视图解析器 -->
	<bean id="freemarkerViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
	    <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
	    <!-- property name="viewNames" value="*.ftl"/-->
	    <property name="contentType" value="text/html; charset=utf-8"/>
	    <property name="cache" value="false" />
	    <property name="prefix" value="" />
	    <property name="suffix" value=".ftl" />
	    <property name="order" value="1"/>
	</bean>    


	<context:component-scan
		base-package="gaf2.server.web,com.warehouse.web.controller"/>

	

	<!-- 如果ClassPath中有JSR-303的实现，例如Hibernate-Validator，则支持@Valid修饰的参数 -->
	<!-- JSR-303 support will be detected on classpath and enabled automatically -->
	<!--mvc:annotation-driven/ -->
	<!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
	<!-- <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"> 
		<property name="supportedMediaTypes"> <list> <value>text/html;charset=UTF-8</value> 
		</list> </property> </bean> -->


	<!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<!-- <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter"> 
		<property name="messageConverters"> <list> <bean class="org.springframework.http.converter.StringHttpMessageConverter"> 
		<constructor-arg> <value>UTF-8</value> </constructor-arg> <property name="writeAcceptCharset" 
		value="false"/> </bean> <bean class="org.springframework.http.converter.FormHttpMessageConverter" 
		/> <ref bean="mappingJacksonHttpMessageConverter"/> </list> </property> </bean> -->

	<mvc:annotation-driven>
		<mvc:message-converters >
		<!--定义消息召唤器      用于处理@responsebady返回值  当满足条件时  自动转换并写回response-->
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg>
					<value>UTF-8</value>
				</constructor-arg>
				<property name="writeAcceptCharset" value="false" />
			</bean>
			<bean id="mappingJacksonHttpMessageConverter"
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
					</list>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<mvc:interceptors>
		<bean id="webContentInterceptor"
			class="org.springframework.web.servlet.mvc.WebContentInterceptor">
			<property name="cacheSeconds" value="0" />
			<property name="useExpiresHeader" value="true" />
			<property name="useCacheControlHeader" value="true" />
			<property name="useCacheControlNoStore" value="true" />
		</bean>
	</mvc:interceptors>

	<!-- Configure the multipart resolver 可以解析request中的媒体文件，需要commonupload的支持 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available; the maximum file size in bytes -->
		<property name="maxUploadSize" value="10000000" />
	</bean>

	<!-- 默认的异常处理 根据默认加载顺序处理 -->
	<bean class="gaf2.core.web.DefaultHandlerExceptionResolver" />

	<security:global-method-security
		jsr250-annotations="enabled" pre-post-annotations="enabled"
		secured-annotations="enabled" />

</beans>
